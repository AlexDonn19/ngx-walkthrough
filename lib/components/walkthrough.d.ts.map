{"version":3,"names":[],"mappings":"","sources":["components/walkthrough.d.ts"],"sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\nimport { AfterViewChecked } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { WalkthroughTapIconsPath } from './ngWalkthroughTapIconsPath';\nexport declare class WalkthroughComponent implements AfterViewChecked {\n    private element;\n    walkthroughType: string;\n    buttonCaption: string;\n    useButton: boolean;\n    mainCaption: string;\n    walkthroughIconWanted: string;\n    walkthroughHeroImage: any;\n    hasGlow: boolean;\n    forceCaptionLocation: string;\n    hasBackdrop: boolean;\n    isRound: boolean;\n    iconPaddingLeft: string;\n    iconPaddingTop: string;\n    tipIconLocation: string;\n    tipColor: string;\n    private _focusElementSelector;\n    focusElementSelector: string;\n    isActive: boolean;\n    onWalkthroughShowEvent: EventEmitter<void>;\n    onWalkthroughHideEvent: EventEmitter<void>;\n    onWalkthroughContentClickedEvent: EventEmitter<void>;\n    onResize(event: any): void;\n    DOM_WALKTHROUGH_CLASS: string;\n    DOM_WALKTHROUGH_TRANSPARENCY_TEXT_CLASS: string;\n    DOM_WALKTHROUGH_TIP_TEXT_CLASS: string;\n    DOM_WALKTHROUGH_HOLE_CLASS: string;\n    DOM_WALKTHROUGH_TRANSPARENCY_ICON_CLASS: string;\n    DOM_WALKTHROUGH_TIP_ICON_CLASS: string;\n    DOM_WALKTHROUGH_ARROW_CLASS: string;\n    DOM_WALKTHROUGH_DONE_BUTTON_CLASS: string;\n    DOM_TRANSCLUDE: string;\n    BUTTON_CAPTION_DONE: string;\n    PADDING_HOLE: number;\n    PADDING_ARROW_START: number;\n    PADDING_ARROW_MARKER: number;\n    ngWalkthroughTapIcons: WalkthroughTapIconsPath;\n    isVisible: any;\n    boolean: boolean;\n    hasTransclude: boolean;\n    walkthroughHoleElements: HTMLElement;\n    walkthroughTextElement: HTMLElement;\n    walkthroughIconElement: HTMLElement;\n    walkthroughArrowElement: HTMLElement;\n    closeIcon: any;\n    walkthroughIcon: any;\n    constructor(element: ElementRef);\n    resizeHandler(): void;\n    setWalkthroughElements(): void;\n    ngAfterViewChecked(): void;\n    getIcon(icon: any): any;\n    toDataURL(url: any): Promise<{}>;\n    setArrowAndText(pointSubjectLeft: any, pointSubjectTop: any, pointSubjectWidth: any, pointSubjectHeight: any, paddingLeft: any): void;\n    isItemOnText(iconLeft: any, iconTop: any, iconRight: any, iconBottom: any): boolean;\n    getOffsetCoordinates(focusElement: HTMLElement): {\n        top: number;\n        left: number;\n        height: number;\n        width: number;\n    };\n    getSameAncestor(focusElement: HTMLElement): any;\n    setIconAndText(iconLeft: any, iconTop: any, paddingLeft: any, paddingTop: any): void;\n    setElementLocations(): void;\n    setFocus(left: any, top: any, width: any, height: any): void;\n    setFocusOnElement(): void;\n    onWalkthroughContentClicked(): void;\n    setTipIconPadding(iconPaddingLeft: any, iconPaddingTop: any): void;\n    onCloseClicked(event: any): void;\n    closeWalkthrough(): void;\n    close_icon: string;\n}\n"],"file":"walkthrough.d.ts"}